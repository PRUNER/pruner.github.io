<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PRUNERS</title>
    <link>https://pruners.github.io/index.xml</link>
    <description>Recent content on PRUNERS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Jan 2017 15:18:39 -0700</lastBuildDate>
    <atom:link href="https://pruners.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>home</title>
      <link>https://pruners.github.io/home/</link>
      <pubDate>Mon, 30 Jan 2017 15:18:39 -0700</pubDate>
      
      <guid>https://pruners.github.io/home/</guid>
      <description>

&lt;h1 id=&#34;description&#34;&gt;Description&lt;/h1&gt;

&lt;p&gt;Reproducibility is highly desirable for parallel applications, but as they are run on increasingly large and heterogeneous platforms, reproducibility of numerical results or code behaviors is becoming less and less obtainable. The same code can produce different results or occasional failures such as a crash on different systems or even across different runs on the same hardware. PRUNERS is a research and development project that aims at innovating scalable techniques to aid applications to obtain the reproducibility. Specifically, our strategy is to accomplish this by developing a multilevel analysis and control toolset called the PRUNERS toolset, which combines static and dynamic analysis techniques to detect, control and eliminate targeted sources of non-determinism, as introduced through parallel programming libraries and APIs.￼&lt;/p&gt;

&lt;p&gt;&lt;h1 id=&#34;news&#34;&gt;Latest News&lt;/h2&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;p&gt;April 2017: Archer, ReMPI, and NINJA have been made available and easily depolyable via the &lt;a class=&#34;smooth-link&#34; href=&#34;https://github.com/LLNL/spack&#34; target=&#34;_blank&#34;&gt;&lt;u&gt;Spack package management tool&lt;/u&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
    &lt;li&gt;&lt;p&gt;June 2015: &amp;ldquo;Pruning&amp;rdquo; Sources of Nondeterminism in Large-Scale Applications, News Highlights in LLNL Computation and Bits and Bytes, June 2015. &lt;a class=&#34;smooth-link&#34; href=&#34;http://computation.llnl.gov/newsroom/pruning-sources-nondeterminism-large-scale-applications&#34; target=&#34;_blank&#34;&gt;&lt;u&gt;Read more&amp;hellip;&lt;/u&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
    &lt;li&gt;&lt;p&gt;July 2014: Supercomputing Tools Speed Simulations, Research Highlights in LLNL Science and Technology Review (S&amp;amp;TR), July 2014. &lt;a class=&#34;smooth-link&#34; href=&#34;https://str.llnl.gov/july-2014/ahn&#34; target=&#34;_blank&#34;&gt;&lt;u&gt;Read more&amp;hellip;&lt;/u&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Publications</title>
      <link>https://pruners.github.io/publications/</link>
      <pubDate>Fri, 27 Jan 2017 22:19:19 -0700</pubDate>
      
      <guid>https://pruners.github.io/publications/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Copyright notice:&lt;/strong&gt; This material is presented to ensure timely dissemination of research and technical work. Copyright and all rights therein are retained by authors or by other copyright holders. All persons copying this information are expected to adhere to the terms and constraints invoked by each author’s copyright.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Contacts</title>
      <link>https://pruners.github.io/contacts/</link>
      <pubDate>Fri, 27 Jan 2017 22:16:55 -0700</pubDate>
      
      <guid>https://pruners.github.io/contacts/</guid>
      <description>&lt;h1&gt;Contacts&lt;/h1&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;a class=&#34;smooth-link&#34; title=&#34;GitHub&#34; href=&#34;https://github.com/PRUNERS&#34; target=&#34;_blank&#34;&gt;&lt;u&gt;GitHub&lt;/u&gt; &lt;i class=&#34;fa fa-github&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a class=&#34;smooth-link&#34; title=&#34;Slack Channel&#34; href=&#34;https://pruners.slack.com&#34; target=&#34;_blank&#34;&gt;&lt;u&gt;Slack Channel&lt;/u&gt; &lt;i class=&#34;fa fa-slack&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;ul style=&#34;list-style-type:circle&#34;&gt; 
            &lt;li&gt; For an invitation please write an email to &lt;a class=&#34;smooth-link&#34; href=&#34;mailto:simone@cs.utah.edu?Subject=[archer-slack] Slack Invitation&#34;&gt;&lt;u&gt;Simone Atzeni&lt;/u&gt;&lt;/a&gt; with a reason why you want to be part of the PRUNERS Slack Team. &lt;/li&gt; 
        &lt;/ul&gt;&lt;br&gt;
    &lt;li&gt;Email Contacts&lt;/li&gt;     
    &lt;ul style=&#34;list-style-type:circle&#34;&gt;
    &lt;li&gt;&lt;a class=&#34;smooth-link&#34; title=&#34;WebMaster&#34; href=&#34;mailto:simone@cs.utah.edu?Subject=[PRUNERS]%20&#34;&gt;&lt;u&gt;Simone Atzeni&lt;/u&gt; &lt;i class=&#34;fa fa-envelope&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Members</title>
      <link>https://pruners.github.io/members/</link>
      <pubDate>Fri, 27 Jan 2017 22:16:50 -0700</pubDate>
      
      <guid>https://pruners.github.io/members/</guid>
      <description>&lt;h1&gt;Members&lt;/h1&gt;

&lt;div style=&#34;padding-top: 0px;&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cs.utah.edu&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;../img/uofu_logo.svg&#34; hspace=&#34;15&#34; vspace=&#34;5&#34; width=&#34;40%&#34; alt=&#34;UofU Logo&#34; title=&#34;University of Utah&#34; style=&#34;display: block; margin: 0 auto;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;div style=&#34;padding-top: 30px;&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.llnl.gov&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;../img/llnl_logo.svg&#34; hspace=&#34;70&#34; vspace=&#34;5&#34; width=&#34;40%&#34; alt=&#34;LLNL Logo&#34; title=&#34;Lawrence Livermore National Laboratory&#34; style=&#34;display: block; margin: 0 auto;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;div style=&#34;padding-top: 30px;&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.rwth-aachen.de&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;../img/rwthaachen_logo.svg&#34; hspace=&#34;15&#34; vspace=&#34;5&#34; width=&#34;40%&#34; alt=&#34;RWTH AACHEN Logo&#34; title=&#34;RWTH AACHEN University&#34; style=&#34;display: block; margin: 0 auto;&#34;/&gt;&lt;/p&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The PRUNERS Team</title>
      <link>https://pruners.github.io/team/</link>
      <pubDate>Fri, 27 Jan 2017 22:16:47 -0700</pubDate>
      
      <guid>https://pruners.github.io/team/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ReMPI</title>
      <link>https://pruners.github.io/rempi/</link>
      <pubDate>Fri, 27 Jan 2017 22:16:40 -0700</pubDate>
      
      <guid>https://pruners.github.io/rempi/</guid>
      <description>

&lt;h1&gt;ReMPI&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;../img/rempi_logo.png&#34; width=&#34;40%&#34; alt=&#34;ReMPI Logo&#34; title=&#34;ReMPI&#34; align=&#34;right&#34; style=&#34;margin-left: 20px; margin-right: 20px;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;ReMPI is a highly scalable scalable record-and-replay tool for MPI applications.
ReMPI records the order of MPI message matching in one run and can deterministically
replay it during subsequent runs. One of the supported modes uses Clock Delta
Compression (CDC) for running at extreme-scale. CDC can reduce the record size down
to the bare minimum, which allows ReMPI to keep record data on node-local
storage, and drastically improve scalability versus writing to a shared file system.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;software&#34;&gt;Software&lt;/h2&gt;

&lt;p&gt;ReMPI is open-source software and can be obtained on &lt;a class=&#34;smooth-link&#34; title=&#34;GitHub&#34; href=&#34;https://github.com/PRUNERS/ReMPI&#34; target=&#34;_blank&#34;&gt;&lt;u&gt;GitHub&lt;/u&gt;&lt;/a&gt; &lt;i class=&#34;fa fa-github&#34;&gt;&lt;/i&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;quick-start&#34;&gt;Quick Start&lt;/h2&gt;

&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Spack: Recommended for curious users&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;ReMPI&lt;/b&gt; maintains an up-to-date package in the Spack develop branch, which builds all dependencies and &lt;b&gt;ReMPI&lt;/b&gt; itself. To install via Spack run:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ git clone https://github.com/LLNL/spack
$ spack/bin/spack install rempi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you already have Spack, you can omit the first line.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Manual: Recommended for developers and contributors&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Please refer to the installation instructions in &lt;a class=&#34;smooth-link&#34; title=&#34;README&#34; href=&#34;https://github.com/PRUNERS/ReMPI/blob/master/README.md&#34; target=&#34;_blank&#34;&gt;README.md&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Kento Sato, Dong H. Ahn, Ignacio Laguna, Gregory L. Lee and Martin Schulz, &amp;ldquo;Clock Delta Compression for Scalable Order-Replay of Non-Deterministic Parallel Applications&amp;rdquo;, In Proceedings of the International Conference on High Performance Computing, Networking, Storage and Analysis 2015 (SC15), Austin, USA, Nov, 2015.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>FLiT</title>
      <link>https://pruners.github.io/flit/</link>
      <pubDate>Fri, 27 Jan 2017 22:16:37 -0700</pubDate>
      
      <guid>https://pruners.github.io/flit/</guid>
      <description>

&lt;h1&gt;FLiT&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;../img/flit_logo.svg&#34; width=&#34;20%&#34; alt=&#34;FLiT Logo&#34; title=&#34;FLiT&#34; align=&#34;right&#34; style=&#34;margin-left: 20px; margin-right: 20px;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;Floating-point Litmus Tests is a test infrastructure for detecting varibility in floating-point code caused by variations in compiler code generation, hardware and execution environments.&lt;/p&gt;

&lt;p&gt;FLiT works by building many versions of the test suite, using multiple C++ compilers, floating-point related settings (i.e. flags) and optimization levels. These tests are then executed on target platforms, where a representative &amp;lsquo;score&amp;rsquo; is collected into a database, along with the other parameters relevant to the execution, such as host, compiler configuration and compiler vendor. In addition to the user-configured test output, we collect counts of each assembly opcode executed (currently, this works with Intel architectures only, using their PIN dynamic binary instrumentation tool).&lt;/p&gt;

&lt;p&gt;After executing the suite and collecting the data, it is easy to see how results may diverge using only different compiler settings, etc. Also, the developer is able to understand how to configure their build environment for their target architecture(s) such that they can expect consistent floating-point computations.&lt;/p&gt;

&lt;p&gt;It consists of the following components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a test infrastructure in the form of c++ code, where additional tests are easily added&lt;/li&gt;
&lt;li&gt;a dynamic make system to generate diverse executables&lt;/li&gt;
&lt;li&gt;an execution disbursement system&lt;/li&gt;
&lt;li&gt;a SQL database for collecting results&lt;/li&gt;
&lt;li&gt;a collection of queries to help the user understand results&lt;/li&gt;
&lt;li&gt;some data analysis tools, utilizing machine intelligence (such as k-means clustering).&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;software&#34;&gt;Software&lt;/h3&gt;

&lt;p&gt;FLiT is an open-source tool and can be obtained on &lt;a class=&#34;smooth-link&#34; title=&#34;GitHub&#34; href=&#34;https://github.com/PRUNERS/FLiT&#34; target=&#34;_blank&#34;&gt;&lt;u&gt;GitHub&lt;/u&gt; &lt;i class=&#34;fa fa-github&#34;&gt;&lt;/i&gt;&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ninja</title>
      <link>https://pruners.github.io/ninja/</link>
      <pubDate>Fri, 27 Jan 2017 22:16:29 -0700</pubDate>
      
      <guid>https://pruners.github.io/ninja/</guid>
      <description>

&lt;h1&gt;&lt;span style=&#34;font-variant: small-caps;&#34;&gt;Ninja&lt;/span&gt;&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;../img/NINJA_logo.png&#34; width=&#34;40%&#34; alt=&#34;NINJA Logo&#34; title=&#34;ReMPI&#34; align=&#34;right&#34; style=&#34;margin-left: 20px; margin-right: 20px;&#34;/&gt;
&lt;span style=&#34;font-variant: small-caps;&#34;&gt;&lt;b&gt;Ninja&lt;/b&gt;&lt;/span&gt; (Noise INJection Agent) is a smart network noise injector
for quickly exposing unindended MPI message races.
&lt;span style=&#34;font-variant: small-caps;&#34;&gt;Ninja&lt;/span&gt; uses innovative network noise injection
techniques to increase the chances of racy, incorrect MPI message matching within the target
MPI application. &lt;span style=&#34;font-variant: small-caps;&#34;&gt;&lt;b&gt;Ninja&lt;/b&gt;&lt;/span&gt; has been shown to reproduce unsafe message races consistently within
large production applications and can do this up to two orders of magnitude faster than the
traditional testing approach (i.e., random noise injection).&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;software&#34;&gt;Software&lt;/h2&gt;

&lt;p&gt;&lt;span style=&#34;font-variant: small-caps;&#34;&gt;Ninja&lt;/span&gt; is open-source software and can be obtained on &lt;a class=&#34;smooth-link&#34; title=&#34;GitHub&#34; href=&#34;https://github.com/PRUNERS/NINJA&#34; target=&#34;_blank&#34;&gt;&lt;u&gt;GitHub&lt;/u&gt;&lt;/a&gt; &lt;i class=&#34;fa fa-github&#34;&gt;&lt;/i&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;quick-start&#34;&gt;Quick Start&lt;/h2&gt;

&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Spack: Recommended for curious users&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;span style=&#34;font-variant: small-caps;&#34;&gt;Ninja&lt;/span&gt;&lt;/b&gt; maintains an up-to-date package in the Spack develop branch, which builds all dependencies and &lt;b&gt;&lt;span style=&#34;font-variant: small-caps;&#34;&gt;Ninja&lt;/span&gt;&lt;/b&gt; itself. To install via Spack run:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ git clone https://github.com/LLNL/spack
$ spack/bin/spack install pruners-ninja
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you already have Spack, you can omit the first line.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Manual: Recommended for developers and contributors&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Please refer to the installation instructions in &lt;a class=&#34;smooth-link&#34; title=&#34;README&#34; href=&#34;https://github.com/PRUNERS/NINJA/blob/master/README.md&#34; target=&#34;_blank&#34;&gt;README.md&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Kento Sato, Dong H. Ahn, Ignacio Laguna, Gregory L. Lee, Martin Schulz and Christopher M. Chambreau, &amp;ldquo;Noise Injection Techniques for Reproducing Subtle and Unintended Message Races&amp;rdquo;, Proceedings of the 20th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming (PPoPP17), Austin, USA, Feb, 2017.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Archer</title>
      <link>https://pruners.github.io/archer/</link>
      <pubDate>Fri, 27 Jan 2017 22:16:26 -0700</pubDate>
      
      <guid>https://pruners.github.io/archer/</guid>
      <description>

&lt;h1&gt;&lt;span style=&#34;font-variant: small-caps;&#34;&gt;Archer&lt;/span&gt;&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;../img/archer_logo.svg&#34; width=&#34;25%&#34; alt=&#34;Archer Logo&#34; title=&#34;Archer&#34; align=&#34;right&#34; style=&#34;margin-left: 20px; margin-right: 20px;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-variant: small-caps;&#34;&gt;&lt;b&gt;Archer&lt;/b&gt;&lt;/span&gt; is a data race detector for OpenMP programs.&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-variant: small-caps;&#34;&gt;Archer&lt;/span&gt; combines static and dynamic techniques to identify data races in large OpenMP applications, leading to low runtime and memory overheads, while still offering high accuracy and precision. It builds on an open-source tools infrastructure including LLVM, ThreadSanitizer, and OMPT to provide portability.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;software&#34;&gt;Software&lt;/h2&gt;

&lt;p&gt;&lt;span style=&#34;font-variant: small-caps;&#34;&gt;Archer&lt;/span&gt; is an open-source tool and can be obtained on &lt;a class=&#34;smooth-link&#34; title=&#34;GitHub&#34; href=&#34;https://github.com/PRUNERS/archer&#34; target=&#34;_blank&#34;&gt;&lt;u&gt;GitHub&lt;/u&gt; &lt;i class=&#34;fa fa-github&#34;&gt;&lt;/i&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;quick-start&#34;&gt;Quick Start&lt;/h2&gt;

&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Spack: Recommended for curious users&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-variant: small-caps;&#34;&gt;&lt;b&gt;Archer&lt;/b&gt;&lt;/span&gt; maintains an up-to-date package in the Spack develop branch, which builds all dependencies and &lt;span style=&#34;font-variant: small-caps;&#34;&gt;&lt;b&gt;Archer&lt;/b&gt;&lt;/span&gt; itself. To install via Spack run:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ git clone https://github.com/LLNL/spack
$ spack/bin/spack install archer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you already have Spack, you can omit the first line.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Manual: Recommended for developers and contributors&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Please refer to the instructions in &lt;a class=&#34;smooth-link&#34; title=&#34;README&#34; href=&#34;https://github.com/PRUNERS/archer/blob/master/README.md&#34; target=&#34;_blank&#34;&gt;README.md&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>