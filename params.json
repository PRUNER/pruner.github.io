{"name":"PRUNER","tagline":"Providing Reproducibility on Ubiquitously Non-deterministic Environments and Runs","body":"### Description\r\nReproducibility is highly desirable for parallel applications, but as they are run on increasingly large and heterogeneous platforms, reproducibility of numerical results or code behaviors is becoming less and less obtainable. The same code can produce different results or occasional failures such as a crash on different systems or even across different runs on the same hardware. PRUNER is a research and development project that aims at innovating scalable techniques to aid applications to obtain the reproducibility. Specifically, our strategy is to accomplish this by developing a multilevel analysis and control toolset called the PRUNING toolset, which combines static and dynamic analysis techniques to detect, control and eliminate targeted sources of non-determinism, as introduced through parallel programming libraries and APIs.ï¿¼\r\n\r\n### Contributors\r\n## LLNL\r\n* Dong H. Ahn (Lead)\r\n* Chris Chambreau\r\n* Gregory L. Lee\r\n* Ignacio Laguna\r\n* Kento Sato (Postdoc)\r\n* Martin Schulz\r\n## University of Utah - Formal Method Group\r\n* Simone Atzeni (Phd student, @simoatze)\r\n* Prof. Ganesh Gopalakrishnan\r\n* Prof. Zvonimir Rakamaric\r\n\r\n### Support or Contact\r\nFor any question or problem please contact [Simone Atzeni](mailto:simone@cs.utah.edu).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}